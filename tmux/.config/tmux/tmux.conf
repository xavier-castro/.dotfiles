set -g default-terminal "tmux-256color"
set -s escape-time 0

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -g status-style 'bg=#333333 fg=#5eacd3'
set -g base-index 1

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/personal/dev/todo.md"

bind-key -r C-f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
bind-key -r M-h run-shell "tmux neww tmux-sessionizer -s 0"
bind-key -r M-t run-shell "tmux neww tmux-sessionizer -s 1"
bind-key -r M-n run-shell "tmux neww tmux-sessionizer -s 2"
bind-key -r M-s run-shell "tmux split-window -h ascii-video-player ~/personal/dev/subway_surfer/frames"
# -- AI Integration --
# Super+m: Open new window and run nb
bind-key C-m new-window -n "nb" "nb"
# Prefix+c: Run claude code in current dir in new pane
# bind-key C-c split-window -v "claude code ."
bind-key C-c new-window -n "claude" "claude --dangerously-skip-permissions"

# Prefix+g: Run gemini in current dir in new pane
# bind-key C-g split-window -v "gemini"
bind-key C-g new-window -n "gemini" "gemini"
bind-key C-o new-window -n "opencode" "opencode"

bind -n C-S-d next-window
bind -n C-S-s previous-window

